version: 2.1
orbs:
    codecov: codecov/codecov@3.2.2
    gh: circleci/github-cli@1.0.3
    browser-tools: circleci/browser-tools@1.2.4
jobs:
  build_login_workflow:
    working_directory: ~/login-workflow
    docker:
      - image: cimg/node:14.19.0-browsers
    resource_class: large
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            cd login-workflow
            yarn install --frozen-lockfile
      - save_cache:
          name: Save Cache
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
      - run:
          name: Prettier Check
          command: |
            cd login-workflow
            yarn prettier:check
      - run:
          name: Lint
          command: |
            cd login-workflow
            yarn lint
      - run:
          name: Unit Tests
          command: |
            cd login-workflow
            yarn test --no-watch --code-coverage
      - run:
          name: Build
          command: |
            cd login-workflow
            yarn build
      - persist_to_workspace:
          root: .
          paths:
            - login-workflow/dist
            - login-workflow/coverage
  cypress_tests:
    working_directory: ~/login-workflow/example
    parallelism: 2
    docker:
        - image: cimg/node:14.19.0-browsers
    resource_class: large
    steps:
        - checkout
        - restore_cache:
            keys:
                - v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
        - restore_cache:
            keys:
                - v2-dependencies-{{ checksum "login-workflow/example/yarn.lock" }}
        - run:
            name: Install Dependencies
            command: |
              cd login-workflow
              yarn install --frozen-lockfile
        - run:
            name: Install Dependencies
            command: |
              cd login-workflow/example
              yarn install --frozen-lockfile
        - save_cache:
            name: Save Cache
            paths:
                - ~/.cache
                - node_modules
            key: v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
        - save_cache:
            name: Save Cache
            paths:
                - ~/.cache
                - node_modules
            key: v2-dependencies-{{ checksum "login-workflow/example/yarn.lock" }}
        - run:
            name: Stage login workflow
            command: |
                cd login-workflow
                yarn cy:stage
        - run:
            name: Cypress E2E Tests
            command: |
                cd login-workflow
                yarn cytest
        - store_artifacts:
              path: cypress/screenshots
        - persist_to_workspace:
              root: .
              paths:
                - login-workflow/cypress-coverage
  coverage_report:
        working_directory: ~/angular-workflows
        docker:
            - image: cimg/node:14.19.0-browsers

        steps:
            - checkout
            - attach_workspace:
                at: .
            - codecov/upload:
                file: './login-workflow/coverage/angular-workflows/clover.xml'
                flags: unit_tests
                token: CODECOV_TOKEN
            - codecov/upload:
                file: './login-workflow/cypress-coverage/clover.xml'
                flags: unit_tests
                token: CODECOV_TOKEN

  publish_login_workflow:
    docker:
      - image: cimg/node:14.19.0-browsers

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Authenticate with registry
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
            echo "//registry.yarnpkg.com/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish @brightlayer-ui/angular-auth-workflow
          command:  |
            cd login-workflow && yarn publish:package -b $CIRCLE_BRANCH
            
workflows:
  version: 2
  angular_workflows:
    jobs:
      - build_login_workflow
      - cypress_tests:
          requires:
            - build_login_workflow
          filters:
            branches:
              only:
                - master
                - dev
      - coverage_report:
                requires:
                    - build_login_workflow
                    - cypress_tests
                filters:
                    branches:
                        only:
                            - master
      - publish_login_workflow:
          requires:
            - cypress_tests
          filters:
            branches:
              only:
                - master
                - dev
